@model DienDanThaoLuan.Models.QuanTriVien
@{
    ViewBag.Title = "AdminInfo";
    Layout = "~/Views/Shared/_LayoutUser.cshtml";
}

<style type="text/css">
    /*css for cover change*/

    .cover-container {
        position: relative;
        height: 350px;
        background-color: #f0f2f5;
        margin-bottom: 60px;
        margin-left: 12px;
        margin-right: 37px;
        border-bottom-right-radius: 10px;
        border-bottom-left-radius: 10px;
    }

    .cover-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .cover-upload-icon {
        position: absolute;
        bottom: 20px;
        right: 20px;
        background-color: white;
        padding: 8px 16px;
        border-radius: 6px;
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        transition: all 0.2s ease;
    }

        .cover-upload-icon:hover {
            background-color: #f0f2f5;
        }

    .profile-section {
        position: relative;
        max-width: 1000px;
        margin: -135px 20px 0px 30px;
        padding: 0 20px;
    }

    .profile-header {
        display: flex;
        align-items: flex-end;
        margin-bottom: 20px;
    }

    .profile-img-container {
        position: relative;
        margin-right: 20px;
    }

    .profile-img-large {
        width: 200px;
        height: 200px;
        border-radius: 50%;
        border: 6px solid white;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        object-fit: cover;
    }

    .profile-info {
        margin: 30px 0px;
    }

        .profile-info h1 {
            font-size: 35px;
        }

    .profile-name {
        font-size: 32px;
        font-weight: bold;
        margin: 0;
        color: #1c1e21;
    }

    .profile-role {
        font-size: 15px;
        color: #65676B;
        margin-top: 5px;
    }
    .avatar-upload-icon {
        position: absolute;
        bottom: 5px;
        right: 5px;
        background-color: white;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: pointer;
        transition: all 0.3s ease;
        border: 2px solid #fff;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }
</style>

<div class="cover-container">
    <img src="@Url.Content("~/Images/" + Model.AnhBia)" alt="Cover" class="cover-image" style=" border-bottom-right-radius: 10px; border-bottom-left-radius: 10px;">
    <label for="cover" class="cover-upload-icon">
        <i class="fas fa-camera"></i>
        <span>Chỉnh sửa ảnh bìa</span>
        @using (Html.BeginForm("ChangeCover", "UserInfo", FormMethod.Post, new { enctype = "multipart/form-data", id = "coverForm" }))
        {
            @Html.AntiForgeryToken()
            <input type="file"
                   id="cover"
                   name="cover"
                   accept="image/*"
                   class="d-none"
                   onchange="handleCoverChange(this);">
        }
    </label>
</div>

<div class="profile-section">
    <div class="profile-header">
        <div class="profile-img-container">
            <img src="@Url.Content("~/Images/" + Model.AnhDaiDien)" alt="Avatar" class="profile-img-large">
            <label for="avatar" class="avatar-upload-icon">
                <i class="fas fa-camera"></i>
                @using (Html.BeginForm("ChangeAvatar", "UserInfo", FormMethod.Post, new { enctype = "multipart/form-data", id = "avatarForm" }))
                {
                    @Html.AntiForgeryToken()
                    <input type="file"
                           id="avatar"
                           name="avatar"
                           accept="image/*"
                           class="d-none"
                           onchange="handleAvatarChange(this);">
                }
            </label>
        </div>
        <div class="profile-info">
            <h1 class="profile-name">@Model.HoTen</h1>
            <div class="profile-role">Quản trị viên</div>
        </div>
    </div>
</div>

<div class="container">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Thông tin Quản trị viên</h5>
                    @using (Html.BeginForm("UpdateAdmin", "UserInfo", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.MaQTV)

                        <div class="mb-3">
                            <p>Họ và tên: </p>
                            @Html.TextBoxFor(m => m.HoTen, new { @class = "form-control", required = "required" })
                        </div>

                        <div class="mb-3">
                            <p>Email: </p>
                            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", type = "email", required = "required" })
                        </div>

                        <div class="mb-3">
                            <p>Giới tính: </p>
                            @{
                                var gioiTinhList = new List<SelectListItem>
                                                                {
                                    new SelectListItem { Value = "", Text = "Chọn giới tính",  Disabled = true, Selected = string.IsNullOrEmpty(Model.GioiTinh) },
                                    new SelectListItem { Value = "Nam", Text = "Nam", Selected = Model.GioiTinh == "Nam" },
                                    new SelectListItem { Value = "Nữ", Text = "Nữ", Selected = Model.GioiTinh == "Nữ" },
                                    new SelectListItem { Value = "Khác", Text = "Khác", Selected = Model.GioiTinh == "Khác" }
                                };
                            }
                            @Html.DropDownListFor(m => m.GioiTinh, gioiTinhList, new { @class = "form-select", required = "required" })
                        </div>

                        <div class="mb-3">
                            <p>Số điện thoại: </p>
                            @Html.TextBoxFor(m => m.SDT, new { @class = "form-control", type = "tel", required = "required" })
                        </div>

                        <div class="mb-3">
                            <p>Ngày sinh: </p>
                            @Html.TextBoxFor(m => m.NgaySinh, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", required = "required" })
                            <div class="invalid-feedback">Vui lòng chọn ngày sinh.</div>
                        </div>

                        <button type="submit" class="btn btn-primary">Cập nhật thông tin</button>
                    }
                </div>
            </div>
        </div>

        <div class="col-md-6 mb-4">
            <div class="card">
                <div class="card-body">
                    <h5 class="card-title">Đổi mật khẩu</h5>
                    @using (Html.BeginForm("ChangePassword", "UserInfo", FormMethod.Post, new { @class = "needs-validation", novalidate = "novalidate" }))
                    {
                        @Html.AntiForgeryToken()
                        <div class="mb-3">
                            <label for="currentPassword" class="form-label" style="margin-bottom: 1rem">Mật khẩu hiện tại</label>
                            <input type="password" name="currentPassword" class="form-control" required>
                            <div class="invalid-feedback">Vui lòng nhập mật khẩu hiện tại.</div>
                        </div>

                        <div class="mb-3">
                            <label for="newPassword" class="form-label" style="margin-bottom: 1rem">Mật khẩu mới</label>
                            <input type="password" name="newPassword" class="form-control" required>
                            <div class="invalid-feedback">Vui lòng nhập mật khẩu mới.</div>
                        </div>

                        <div class="mb-3">
                            <label for="confirmPassword" class="form-label" style="margin-bottom: 1rem">Xác nhận mật khẩu mới</label>
                            <input type="password" name="confirmPassword" class="form-control" required>
                            <div class="invalid-feedback">Vui lòng xác nhận mật khẩu mới.</div>
                        </div>

                        <button type="submit" class="btn btn-primary">Đổi mật khẩu</button>
                    }
                </div>
            </div>
        </div>

    </div>
</div>

<!--script thay đổi avatar-->
<script>
    function handleAvatarChange(input) {
        if (input.files && input.files[0]) {
            // Kiểm tra kích thước file
            if (input.files[0].size > 5 * 1024 * 1024) {
                alert('File quá lớn. Vui lòng chọn file có kích thước nhỏ hơn 5MB.');
                input.value = '';
                return;
            }

            // Preview ảnh
            var reader = new FileReader();
            reader.onload = function (e) {
                document.querySelector('.profile-img-large').src = e.target.result;
            }
            reader.readAsDataURL(input.files[0]);

            // Tự động submit form
            document.getElementById('avatarForm').submit();
        }
    }
</script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">

<!--script tắt alert sau 10s-->
<script>
    // Đợi 10 giây (10000 milliseconds) và sau đó xóa các thẻ thông báo khỏi DOM
    setTimeout(function () {
        var alerts = document.querySelectorAll('.alert');
        alerts.forEach(function (alert) {
            //alert.remove(); // Xóa thẻ div thông báo
            alert.classList.remove('show'); // Xóa lớp 'show' để bắt đầu hiệu ứng fade-out


            // Chờ thêm 500ms để hoàn thành hiệu ứng fade-out rồi xóa thẻ khỏi DOM
            setTimeout(function () {
                alert.remove();
            }, 500); // Thời gian phù hợp với hiệu ứng fade-out
        });
    }, 10000); // Thời gian 10 giây
</script>

<!--script thay đổi ảnh bìa-->
<script>
    function handleCoverChange(input) {
        if (input.files && input.files[0]) {
            if (input.files[0].size > 5 * 1024 * 1024) {
                alert('File quá lớn. Vui lòng chọn file có kích thước nhỏ hơn 5MB.');
                input.value = '';
                return;
            }

            var reader = new FileReader();
            reader.onload = function (e) {
                document.querySelector('.cover-image-large').src = e.target.result;
            }
            reader.readAsDataURL(input.files[0]);

            document.getElementById('coverForm').submit();
        }
    }
</script>
